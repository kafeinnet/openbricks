#!/bin/sh

. config/options

unset LDFLAGS

#MAKEFLAGS=-j1

cd $(kernel_path)

case $TARGET_ARCH in
  i386|x86_64)  IMAGE=bzImage  ;;
  mips|powerpc) IMAGE=vmlinux  ;;
  powerpc64)    IMAGE=zImage   ;;
  arm)
    . $CONFIG_MACHINE/meta
    #[ -n "$MACHINE_UBOOT_CONFIG" ] && IMAGE=uImage || IMAGE=zImage
    IMAGE=zImage
    ;;
esac
make $IMAGE
make modules
make dtbs

install_dir="`pwd`/.install"
debug_dir="`pwd`/.install-debuginfo/usr/lib/debug"
rm -rf $install_dir $debug_dir
mkdir -p $install_dir/lib/firmware $debug_dir

make modules_install \
  INSTALL_MOD_PATH=.install \
  DEPMOD=$ROOT/$TOOLCHAIN/bin/depmod \

kmod_dir="$install_dir/lib/modules/$(kernel_version)"

if [ -d .install/lib/firmware ]; then
  mv .install/lib/firmware .install/firmware
else
  mkdir -p .install/firmware
fi
rm -f $kmod_dir/build $kmod_dir/source $kmod_dir/modules.*
strip_kmods "$kmod_dir" "$debug_dir"

mkdir -p .install/boot
case $TARGET_ARCH in
  arm|powepc64)
    if [ "$TARGET_PLATFORM" = bcm2708 ]; then
      # add raspberry pi magic
      cat first32k.bin arch/$TARGET_ARCH/boot/Image > .install/boot/kernel.img
    else
      cat arch/$TARGET_ARCH/boot/$IMAGE arch/$TARGET_ARCH/boot/dts/dove-cubox.dtb > arch/$TARGET_ARCH/boot/zImage.cubox
      mkimage -A arm -O linux -C none  -T kernel -a 0x00008000 -e 0x00008000 \
        -n 'Linux-cubox' -d arch/$TARGET_ARCH/boot/zImage.cubox arch/$TARGET_ARCH/boot/uImage
      cp arch/$TARGET_ARCH/boot/uImage .install/boot
    fi
    ;;
  mips|powerpc)
    cp vmlinux .install/boot
    $STRIP .install/boot/$IMAGE
    ;;
  i386|x86_64)
    cp arch/$TARGET_ARCH/boot/$IMAGE .install/boot/vmlinuz
    ;;
esac
  
exit 0
